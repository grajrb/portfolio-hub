// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Contact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  subject   String
  message   String
  budget    String?
  timeline  String?
  status    String   @default("NEW") // NEW, READ, REPLIED, CLOSED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model NewsletterSubscriber {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  email           String    @unique
  name            String?
  interests       String[]  @default([])
  isActive        Boolean   @default(true)
  subscribedAt    DateTime  @default(now())
  unsubscribedAt  DateTime?
  resubscribedAt  DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("newsletter_subscribers")
}

model BlogPost {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  content     String
  excerpt     String?
  tags        String[]  @default([])
  isPublished Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("blog_posts")
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String   @unique
  description String
  content     String?
  tags        String[] @default([])
  category    String
  status      String   @default("COMPLETED") // COMPLETED, IN_PROGRESS, PLANNED
  featured    Boolean  @default(false)
  githubUrl   String?
  demoUrl     String?
  imageUrl    String?
  stats       Json?    // For storing stars, forks, users etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

model ResumeAnalysis {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  fileName     String
  originalText String
  analysis     Json     // Store ATS analysis results
  suggestions  Json     // Store improvement suggestions
  score        Float?
  createdAt    DateTime @default(now())

  @@map("resume_analyses")
}

model ChatSession {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionId String   @unique
  messages  Json[]   @default([])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("chat_sessions")
}
